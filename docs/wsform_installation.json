{
    "doc": {
        "name": "installation",
        "type": "wsform",
        "synopsis": "Installation instructions",
        "description": "<p>Grab in instance from the https:\/\/bitbucket.org\/wikibasesolutions\/mw-wsform\/. Create a \"WSForm\" folder in your Wiki extensions folder and extract the files there.<\/p><p>By default the handling of Forms is done outside the Wiki<strong><sup>1<\/sup><\/strong>. This allows for closed wiki's to still have anonymous users fill in forms.<\/p><p>This means you need to <strong>create a user<\/strong> specifically for WSForm. This can be a new user or you can create a BOT account from your own account. Below is described how to add a new user:<\/p><ul><li>go to Special:CreateAccount and create an account e.g. formsubmitter<\/li><li>Set the appropriate rights in Special:UserRights (preferably Admin\/bureaucrat rights<\/li><li>Open <code>\/WSForm\/config\/config_default.php<\/code> fill the username and password you just created<strong><sup>2<\/sup><\/strong><\/li><li>If you on a FARM add the path to the FARM<strong><sup>3<\/sup><\/strong><\/li><li><p>Save the file as config.php<\/p><\/li><\/ul><br><p>If you are on FARM you can add a WSFormSettings.php in the wiki\/name folder with the following content :<\/p><br><pre><span class=\"cp\">&lt;?php<\/span>\r\n<span class=\"nv\">$this<\/span><span class=\"o\">-&gt;<\/span><span class=\"na\">app<\/span><span class=\"p\">[<\/span><span class=\"s1\">'username'<\/span><span class=\"p\">]<\/span><span class=\"o\">=<\/span><span class=\"s1\">'...'<\/span><span class=\"p\">;<\/span>\r\n<span class=\"nv\">$this<\/span><span class=\"o\">-&gt;<\/span><span class=\"na\">app<\/span><span class=\"p\">[<\/span><span class=\"s1\">'password'<\/span><span class=\"p\">]<\/span><span class=\"o\">=<\/span><span class=\"s1\">'...'<\/span><span class=\"p\">;<br><\/span><\/pre><p>For uploading files the user created will need to have the rights for :<\/p>\r\n<ul><li>\r\n<p>upload<\/p>\r\n<\/li><li>\r\n<p>uploadfile<\/p>\r\n<\/li><li>\r\n<p>upload_by_url<\/p><\/li><\/ul><p>General settings (in localsettings.php) that need to be enabled :<\/p>\r\n<ul><li>\r\n<p>$wgAllowCopyUploads = true;<\/p>\r\n<\/li><li>\r\n<p>$wgCopyUploadsFromSpecialUpload = true;<\/p><\/li><\/ul><br><p>Finally add the following line at the end of your LocalSettings.php to enable the extension :<\/p><pre><span class=\"x\">wfLoadExtension( 'WSForm' );<\/span><\/pre><br><p>WSForm has a notification system build in. This is used to show possible errors or success \/ custom  messages.<\/p>\r\n<p>To enable this.. add to your header page :<\/p>\r\n<p class=\"codehilite language-php\"><pre><span><\/span><span class=\"x\">&lt;wsform showmessages \/&gt;<\/span>\r\n<\/pre><\/p>",
        "parameters": "<h3><strong>config.php<br><\/strong><\/h3><p><strong>1<\/strong>. This behaviour is set in the WSForm\/config\/config.php file. <br>The config setting<strong> user-api-user-only<\/strong> is a new feature as off 0.8.0.5.0. Default is set to yes (old WSForm behaviour)\r\n * If set to \"no\", WSForm will create\/edit\/upload under the current logged in user, instead of the WSForm user\r\n *. Even if set to no (leaving it empty also means yes),\r\n * WSForm still needs an API user for other tasks, so make sure you add a WSForm user<\/p><p><strong>2<\/strong>. User name is set in api-username and password is set in api-password inside the config file<\/p><p><strong>3<\/strong>. Path to the Farm is set in <strong>wgAbsoluteWikiPath<\/strong><\/p><p><span style=\"color: rgb(89, 89, 89);\">The config\/config.php has&nbsp; $IP and $serverName (similar to $wgWiki) available there that you can use<\/span><\/p><p><span style=\"color: rgb(89, 89, 89);\"><strong>wgAbsoluteWikiPath <\/strong>is used when in a farm. Needs to be the path to the current wiki<\/span><\/p><p><span style=\"color: rgb(89, 89, 89);\"> There it will look for WSFormSettings.php to read the username and password for that wiki user<\/span><\/p><p><span style=\"color: rgb(89, 89, 89);\"> * Example wgAbsoluteWikiPath :  $IP . '\/wikis\/' . $serverName<\/span><\/p><br><p>The config.php also has the option :<strong> api-cookie-path<\/strong>. This defaults to \/tmp\/COOKIE, but depending on your hosting you might need to set this to e.g. just COOKIE if you get weird errors.<\/p><br><p><strong>api-url-overrule<\/strong> can be used if WSForm incorrectly detects the MediaWiki api url<\/p><ul><li>&nbsp;This needs to be the full url to the folder where the MediaWiki api.php is (useally the root of your MediaWiki installation)<\/li><li>&nbsp;api-url-overrule should be left empty unless WSForm cannot find the MediaWiki API<\/li><li>&nbsp;Example api-url-overrule : \"https:\/\/mywebsite\" (without api.php)<\/li><\/ul><p>If you plan on using Google reCaptcha you will need to set the following to settings:<span style=\"color: #bf2600;\"><\/span><\/p><p>\"<strong>rc_site_key<\/strong>\" =&gt; '',<br>\"<strong>rc_secret_key<\/strong>\" =&gt; ''<\/p><p>and fill them in with the information from Google.<br><\/p>",
        "example": " ",
        "note": "<p>Make sure you have <strong>&lt;wsform showmessages \/&gt; <\/strong>in e.g. your header page that is shown on every page<strong>.<\/strong> This will show possible error messages that might occur<strong> <\/strong>and allows for the <strong>messageonsucces<\/strong>s option to work<strong>.<br><\/strong><\/p>",
        "links": "none<br>",
        "created": "22-05-2020 22:05:02",
        "created by": "Charlot Cobben"
    }
}