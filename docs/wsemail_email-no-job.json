{
    "doc": {
        "name": "email-no-job",
        "type": "wsemail",
        "synopsis": "How to email a submitted form",
        "description": "<p>WSForm can send a submitted form as an email. The WSForm tag needs an <strong>action<\/strong> of '<strong>email<\/strong>' for this. All other setting are done through the <strong>wsemail<\/strong> function.<\/p><br><p><strong>to<\/strong>, <strong>cc<\/strong>, <strong>bcc<\/strong>, <strong>from, replyto<\/strong> fields need to be all valid email addresses. Format is either just an email address, or the name and the email address in square brackets ( Ad Strack van Schijndel [ad@wikibase.nl] ). To, cc and bcc can be a comma separated list of addresses<br><br><strong>Subject<\/strong> is the subject of the email<br><\/p><p><strong>html<\/strong> is by default yes. If set to \"no\" mail will be send as plain text<\/p><p><strong>footer<\/strong> and <strong>header<\/strong> are title names of wiki pages that will be added to the email body.<\/p><p><strong>attachment <\/strong>can be used to (currently) add one attachment to your email. It needs to be a file uploaded to the wiki .<br><\/p><br><p>Use a <strong>template<\/strong> if you have a form with filled in fields that need to be added to the body of the email.<\/p><p>A <strong>template<\/strong> is the title of a wiki page where the body of your email is written. The names of the form fields should be in this template with a suffix of '$'. So, if your form has a input field with the name \"name\", your template should have the word \"$name\" in it. This will be replaced by the value submitted by the form. <font color=\"#FF0000\">ATTN: If no value is found, your email body will contain '\"$name\".<\/font><\/p><br><p>So basically there are 3 ways to send emails with WSForm:<\/p><ol><li>Have all the email details inside the form and the content between the start and end brackets of wsemail. (No form fields will be send with the email)<br><\/li><li>Have all the email details inside the form, but have a template with the body of an email where form fields will be placed into.<\/li><li>Create a job (a json page inside the wiki) where every job is completely defined.<\/li><\/ol><p><strong><span style=\"color: rgb(31, 73, 125);\">New in v0.7.0.3.6<\/span><\/strong><\/p><p>Create a form with only a template assigned to wsemail. This will function as step 2 (see above), but the template can also hold all the additional information for the email to be send.<\/p><p>The following command can be added to the template (and will be removed before sending) <strong>to<\/strong>, <strong>from<\/strong>, <strong>subject<\/strong>, <strong>cc<\/strong>, <strong>bcc<\/strong>, <strong>header<\/strong>, <strong>footer<\/strong>.<br>These are written in a special format : Starting with <strong>%ws_<\/strong>&nbsp; and ending with <strong>%. <\/strong>For example : <strong>%ws_to=<\/strong>me@email.com<strong>% <\/strong>or<strong> %ws_subject=<\/strong>test subject<strong>%<\/strong><\/p><p>If the wsemail parameter also has to, from, subject etc.. they will overrule the template ones.<br><\/p>",
        "parameters": "<p><\/p><ul><li>wsform action=\"mail\"<\/li><\/ul><ul><li>wsemail<br><ul><li>to=<\/li><li>cc=<\/li><li>bcc=<\/li><li>replyto=<br><\/li><li>from=<\/li><li>subject=<\/li><li>template=<\/li><li>html=<\/li><li>attachment=<\/li><li>parselast=<br><\/li><li>footer=<\/li><li>header=<\/li><\/ul><\/li><\/ul><p><\/p>",
        "example": "<wsform action=\"mail\" mwreturn=\"returntothisurl\">\r\n\r\n<wsemail to=\"charlot@wikibase.nl\" from=\"Charlot [charlot@wikibase.nl]\" cc=\"dennis@wikibase.nl\" subject=\"test wsform mail\" footer=\"WSForm_mail_footer\" header=\"WSForm_mail_header\" attachment=\"{{filepath:test.jpg}}\">\r\n<h3>Testmail versie 0.1 WSForm emailing<\/h3>\r\n<\/wsemail>\r\n\r\n\r\nExample for a template :\r\nDear $name,\r\n\r\nThis is an automated email message based on a template.\r\n\r\nYour streetname is : $street\r\nNumber of your house : $number\r\nYou city is  : $city\r\n\r\nRegards,\r\nWSForm",
        "note": "Remember.. when using this solution (not using a job), people can inspect the source of a page and discover all the details of the email.<br>",
        "links": "<p>...<\/p>",
        "created": "",
        "created_by": "",
        "last modified": "19-02-2020 22:02:47",
        "modified by": "Charlot"
    }
}